---
version: 2
jobs:
  python3_test:
    # Run Python 3 tests
    working_directory: /python3_test
    docker:
      - image: continuumio/miniconda
    steps:
      - checkout
      - run:
          # Add some system packages (mostly since geoval needs them)
          command: |
            apt-get update -y && apt-get install -y build-essential
      - restore_cache:
          key: deps3-{{ .Branch }}-{{ checksum "environment.yml" }}
      - run:
          # Update/Create Conda Environment
          command: |
            if ! test -d "/opt/conda/envs/esmvaltool"; then
              conda create -y -n esmvaltool python=3
            fi
            conda env update --name esmvaltool
      - save_cache:
          key: deps3-{{ .Branch }}-{{ checksum "environment.yml" }}
          paths:
            - "/opt/conda/envs/esmvaltool"
      - run:
          # Activate Conda environment and run tests
          command: |
            source activate esmvaltool
            python setup.py test
      - store_test_results:
          path: test-reports/
      - store_artifacts:
          path: test-reports/
      - run:
          # Upload Python 3 test coverage to codacy, even when the actual
          # running of the tests fails.
          when: always
          command: |
            pip install codacy-coverage
            python-codacy-coverage -r test-reports/python3/coverage.xml

  python2_test:
    # Run Python 2 tests
    working_directory: /python2_test
    docker:
      - image: continuumio/miniconda
    steps:
      - checkout
      - run:
          # Add some system packages (mostly since geoval needs them)
          command: |
            apt-get update -y && apt-get install -y build-essential
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "environment.yml" }}
      - run:
          # Update/Create Conda Environment
          command: |
            if ! test -d "/opt/conda/envs/esmvaltool"; then
              conda create -y -n esmvaltool python=2
            fi
            conda env update --name esmvaltool
      - save_cache:
          key: deps2-{{ .Branch }}-{{ checksum "environment.yml" }}
          paths:
            - "/opt/conda/envs/esmvaltool"
      - run:
          # Activate Conda environment and run tests
          command: |
            source activate esmvaltool
            python setup.py test

  python3_install:
    # Test Python 3 installation
    working_directory: /python3_install
    docker:
      - image: continuumio/miniconda
    steps:
      - checkout
      - run:
          command: |
            set -x
            mkdir logs
            # Install
            apt-get update > logs/apt.txt 2>&1
            apt-get install -y build-essential >> logs/apt.txt 2>&1
            conda create -y -n esmvaltool python=3 > logs/conda.txt 2>&1
            conda env update --name esmvaltool >> logs/conda.txt 2>&1
            set +x
            source activate esmvaltool
            set -x
            pip install . > logs/install.txt 2>&1
            # Log versions
            dpkg -l > logs/versions_dpkg.txt
            conda env export > logs/versions_conda.txt
            pip freeze > logs/versions_pip.txt
            # Test installation
            esmvaltool -h
            ncl -V
      - store_artifacts:
          path: logs

  python2_install:
    # Test Python 2 installation
    working_directory: /python2_install
    docker:
      - image: continuumio/miniconda
    steps:
      - checkout
      - run:
          command: |
            set -x
            mkdir logs
            # Install
            apt-get update > logs/apt.txt 2>&1
            apt-get install -y build-essential >> logs/apt.txt 2>&1
            conda create -y -n esmvaltool python=2 > logs/conda.txt 2>&1
            conda env update --name esmvaltool >> logs/conda.txt 2>&1
            set +x
            source activate esmvaltool
            set -x
            pip install . > logs/install.txt 2>&1
            # Log versions
            dpkg -l > logs/versions_dpkg.txt
            conda env export > logs/versions_conda.txt
            pip freeze > logs/versions_pip.txt
            # Test installation
            esmvaltool -h
            ncl -V
      - store_artifacts:
          path: logs

  python3_development:
    # Test Python 3 development installation
    working_directory: /python3_development
    docker:
      - image: continuumio/miniconda
    steps:
      - checkout
      - run:
          command: |
            set -x
            mkdir logs
            # Install
            apt-get update > logs/apt.txt 2>&1
            apt-get install -y build-essential >> logs/apt.txt 2>&1
            conda create -y -n esmvaltool python=3 > logs/conda.txt 2>&1
            conda env update --name esmvaltool >> logs/conda.txt 2>&1
            set +x
            source activate esmvaltool
            set -x
            pip install -e .[dev] > logs/install.txt 2>&1
            # Log versions
            dpkg -l > logs/versions_dpkg.txt
            conda env export > logs/versions_conda.txt
            pip freeze > logs/versions_pip.txt
            # Test installation
            esmvaltool -h
            ncl -V
      - store_artifacts:
          path: logs

workflows:
  version: 2
  commit:
    jobs:
      - python3_test
      - python2_test
  nightly:
    triggers:
      - schedule:
          cron: "56 13 * * *"
          filters:
            branches:
              only:
                - REFACTORING_backend
                - REFACTORING_nightly_build
    jobs:
      - python3_test
      - python2_test
      - python3_install
      - python2_install
      - python3_development
